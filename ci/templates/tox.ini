[tox]
envlist =
    clean,
    check,
    docs,
{% for env in tox_environments|sort %}
    {{ env }},
{% endfor %}
    report

[testenv]
wheel = true
basepython =
    # pypy: {env:TOXPYTHON:pypy}
    bootstrap: python
{% for env in tox_environments|sort %}
    env.split("-")[0] : {env:TOXPYTHON:{{ env.split("-")[0] if env.startswith("pypy") else "python{0[2]}.{0[3]}".format(env) }}}
{% endfor %}
    {bootstrap, docs,spell,clean,check,report,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
deps =
    pytest
    pytest-travis-fold
commands =
    {posargs:pytest -vv --ignore=src}

[testenv:bootstrap]
deps =
    jinja2
    matrix
    tox
skip_install = true
usedevelop = false
commands =
    python ci/bootstrap.py --no-env
passenv =
    *

[testenv:check]
deps =
    docutils
    flake8
    readme-renderer
    pygments
    isort
    setuptools-scm
skip_install = true
usedevelop = false
commands =
    python setup.py check --strict --metadata --restructuredtext
    flake8 src tests setup.py
    isort --verbose --check-only --diff --recursive src tests setup.py

[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
usedevelop = false
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
usedevelop = true
install_command =
    python -m pip install --no-use-pep517 {opts} {packages}
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -E -j auto -b doctest docs dist/docs
    sphinx-build -E -j auto -b html docs dist/docs
    sphinx-build -j auto -b linkcheck docs dist/docs

[testenv:codecov]
deps =
    codecov
skip_install = true
usedevelop = false
commands =
    coverage xml --ignore-errors
    codecov []

[testenv:report]
deps = coverage
skip_install = true
usedevelop = false
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
usedevelop = false
deps = coverage

